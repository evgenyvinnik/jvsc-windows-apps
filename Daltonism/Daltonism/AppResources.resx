<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppTitle" xml:space="preserve">
    <value>Daltonism</value>
    <comment>Name of applicaton</comment>
  </data>
  <data name="BackToGameButton" xml:space="preserve">
    <value>Back to Game</value>
    <comment>Back to game button description</comment>
  </data>
  <data name="BlueColor" xml:space="preserve">
    <value>Blue</value>
    <comment>Name of green color</comment>
  </data>
  <data name="BlueDescription" xml:space="preserve">
    <value>Click this button to show blue component of original color</value>
    <comment>Description of the Blue button</comment>
  </data>
  <data name="CheckButton" xml:space="preserve">
    <value>Check</value>
    <comment>CheckButton description</comment>
  </data>
  <data name="CloseButton" xml:space="preserve">
    <value>Close</value>
    <comment>Close button</comment>
  </data>
  <data name="Controls" xml:space="preserve">
    <value>Controls</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>The game goal is match given color as close as possible by adjusting color component sliders.</value>
    <comment>Game description</comment>
  </data>
  <data name="DeveloperString" xml:space="preserve">
    <value>Developer</value>
    <comment>developers</comment>
  </data>
  <data name="GoalMessage" xml:space="preserve">
    <value>Goal</value>
  </data>
  <data name="GradeButton" xml:space="preserve">
    <value>Grade</value>
    <comment>String for Grade</comment>
  </data>
  <data name="GradeDescription" xml:space="preserve">
    <value>Click this button to get a estimated grade how close are you to original color</value>
    <comment>Description of the Grade button</comment>
  </data>
  <data name="GradeMessage" xml:space="preserve">
    <value>Your grade is</value>
    <comment>Grade message description</comment>
  </data>
  <data name="GreenColor" xml:space="preserve">
    <value>Green</value>
    <comment>Name of green color</comment>
  </data>
  <data name="GreenDescription" xml:space="preserve">
    <value>Click this button to show green component of original color</value>
    <comment>Description of the Green button</comment>
  </data>
  <data name="HelpButton" xml:space="preserve">
    <value>Help</value>
    <comment>String for Help</comment>
  </data>
  <data name="HelpName" xml:space="preserve">
    <value>Daltonism help</value>
  </data>
  <data name="Hints" xml:space="preserve">
    <value> hints</value>
  </data>
  <data name="HintsMessage" xml:space="preserve">
    <value>You've used </value>
  </data>
  <data name="NewGameButton" xml:space="preserve">
    <value>New Game</value>
    <comment>New Game button on results page</comment>
  </data>
  <data name="RecallButton" xml:space="preserve">
    <value>Recall</value>
    <comment>String for Recall</comment>
  </data>
  <data name="RecallDescription" xml:space="preserve">
    <value>Click this button to show original color</value>
    <comment>Description of the Recall button</comment>
  </data>
  <data name="RedColor" xml:space="preserve">
    <value>Red</value>
    <comment>Name of red color</comment>
  </data>
  <data name="RedDescription" xml:space="preserve">
    <value>Click this button to show red component of original color</value>
    <comment>Description of the Red button</comment>
  </data>
  <data name="ResultMessage" xml:space="preserve">
    <value>Color difference is </value>
    <comment>Your result description</comment>
  </data>
  <data name="StartButton" xml:space="preserve">
    <value>Start</value>
    <comment>Start button</comment>
  </data>
</root>